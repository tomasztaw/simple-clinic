plugins {
	id 'java'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
	id "org.openapi.generator" version "${openapiGeneratorVersion}"
}

group = 'pl.taw'
version = '1.0'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// spring
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// format xml
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'


	// for registration
	// https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-springsecurity5
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.1.1.RELEASE'


	// db
	implementation 'org.flywaydb:flyway-core'
	runtimeOnly 'org.postgresql:postgresql'

	// annotations
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

	// api
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocOpenApiVersion}"

	// Po wygenerowaniu klienta, trzeba będzie dodać poniższe zależności, żeby kod się kompilował
	implementation "org.openapitools:jackson-databind-nullable:${jacksonDatabindNullableVersion}"
	implementation "javax.annotation:javax.annotation-api:${javaxAnnotationApiVersion}"
	implementation "io.swagger:swagger-annotations:${swaggerAnnotationsVersion}"

	// warning: unknown enum constant When.MAYBE
	// reason: class file for javax.annotation.meta.When not found
	implementation "com.google.code.findbugs:jsr305:${jsr305Version}"

	// test
//	testRuntimeOnly 'com.h2database:h2'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'

	// Integration tests
	// Ta zależność musi być przed wiremock standalone
	testImplementation "org.slf4j:slf4j-api:${wiremockSlf4jVersion}"
	testImplementation "com.github.tomakehurst:wiremock-standalone:${wiremockVersion}"
	testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"

	// dodane zgodnie z dokumentacją
	testImplementation 'io.rest-assured:json-path:5.3.1'
	testImplementation 'io.rest-assured:xml-path:5.3.1'
	testImplementation 'io.rest-assured:json-schema-validator:5.3.1'
	testImplementation 'io.rest-assured:spring-mock-mvc:5.3.1'
	testImplementation 'io.rest-assured:spring-web-test-client:5.3.1'
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

// https://github.com/OpenAPITools/openapi-generator/tree/master/modules
// https://openapi-generator.tech/docs/generators/java/
// https://openapi-generator.tech/docs/plugins
// https://petstore3.swagger.io/
// http://www.cepik.gov.pl/interfejs-dla-cepik

openApiGenerate {
	generatorName = "java"
	library = "webclient"
	configOptions.putAll([
			serializableModel   : "true",
			dateLibrary         : "java8",
			serializationLibrary: "jackson"
	])
	outputDir = "$buildDir/generated-sources/openapi".toString()
//	inputSpec = "$rootDir/src/main/resources/contracts/cepik-1.1.3.json".toString()
	inputSpec = "$rootDir/src/main/resources/contracts/petstore-v3.0.2.json".toString()
//	apiPackage = "pl.zajavka.infrastructure.cepik.api"
	apiPackage = "pl.taw.infrastructure.petstore.api"
//	modelPackage = "pl.zajavka.infrastructure.cepik.model"
	modelPackage = "pl.taw.infrastructure.petstore.model"
}

sourceSets {
	main {
		java.srcDirs += "$buildDir/generated-sources/openapi/src/main/java"
	}
}

compileJava.dependsOn tasks.openApiGenerate

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

bootJar {
	archiveFileName = "simple_clinic.${archiveExtension.get()}"
}

jar {
	enabled = false
}

compileJava.options.encoding = 'UTF-8'